{
  "id": "OCS",
  "dataSourcePaths": {
    "landing": "${datasources.data.root}/ocs/landing",
    "success": "${datasources.data.root}/ocs/success",
    "error": "${datasources.data.root}/ocs/failed"
  },
  "etlConfiguration": {
    "extract": {
      "type": "CSV",
      "fileNameRegex": "^ocs_daily_(\\d{8})\\.csv\\.gz$",
      "configuration": {
        "options": {
          "sep": "|",
          "header": "true"
        }
      }
    },
    "transform": {
      "filters": [
        "MATCHES_TIMESTAMP_FORMAT(data_operazione, 'dd/MM/yyyy HH:mm:ss')",
        "NEITHER_NULL_OR_BLANK(tipo_operazione)",
        "tipo_operazione IN ('BP', 'BXB', 'BeG', 'BeP', 'PCL', 'PSOS', 'RVK', 'RCP', 'PLOP', 'F24BA')",
        "NEITHER_NULL_OR_BLANK(ricorrente)",
        "IS_FLAG(ricorrente)",
        "NEITHER_NULL_OR_BLANK(storno)",
        "IS_FLAG(storno)",
        "NEITHER_NULL_OR_BLANK(canale)",
        "canale IN ('IB', 'APP', 'FIL')",
        "ndg_cliente IS NOT NULL",
        "ndg_conto IS NOT NULL",
        "MATCHES_TIMESTAMP_FORMAT(data_contabilizzazione, 'dd/MM/yyyy HH:mm:ss')",
        "MATCHES_TIMESTAMP_FORMAT(data_generazione_record, 'dd/MM/yyyy HH:mm:ss')"
      ],
      "transformations": [
        "TO_TIMESTAMP(data_operazione, 'dd/MM/yyyy HH:mm:ss') AS ts_operazione",
        "DATE_FORMAT(TO_TIMESTAMP(data_operazione, 'dd/MM/yyyy HH:mm:ss'), 'yyyy-MM-dd') AS dt_operazione",
        "tipo_operazione AS tp_operazione",
        "CASE WHEN tipo_operazione = 'BP' THEN 'BP - Bancomat Pay' WHEN tipo_operazione = 'BXB' THEN 'BXB - Bonifico XME Banks' WHEN tipo_operazione = 'BeG' THEN 'BeG - Bonifici e Giroconti' WHEN tipo_operazione = 'BeP' THEN 'BeP - Bollette e Pagamenti' WHEN tipo_operazione = 'PCL' THEN 'PCL - Prelievo Cardless' WHEN tipo_operazione = 'PSOS' THEN 'PSOS - Prelievo SOS' WHEN tipo_operazione = 'RVK' THEN 'RVK - Revoca' WHEN tipo_operazione = 'RCP' THEN 'RCP - Ricarica Carta Prepagata' WHEN tipo_operazione = 'PLOP' THEN 'PLOP - Operazione Pianificata' WHEN tipo_operazione = 'F24BA' THEN 'F24BA - F24 e Bollo Auto' END AS desc_operazione",
        "DECODE_FLAG(ricorrente) AS flag_ricorrente",
        "DECODE_FLAG(storno) AS flag_storno",
        "canale AS tp_canale",
        "CASE WHEN canale = 'IB' THEN 'IB - Internet Banking' WHEN canale = 'APP' THEN 'APP - Mobile App' WHEN canale = 'FIL' THEN 'FIL - Filiale' END AS desc_canale",
        "LPAD(ndg_cliente, 16, '0') AS ndg_cliente",
        "LPAD(ndg_conto, 16, '0') AS ndg_conto",
        "TO_TIMESTAMP(data_contabilizzazione, 'dd/MM/yyyy HH:mm:ss') AS ts_contabilizzazione",
        "DATE_FORMAT(TO_TIMESTAMP(data_contabilizzazione, 'dd/MM/yyyy HH:mm:ss'), 'yyyy-MM-dd') AS dt_contabilizzazione",
        "TO_TIMESTAMP(data_generazione_record, 'dd/MM/yyyy HH:mm:ss') AS ts_generazione_record",
        "DATE_FORMAT(TO_TIMESTAMP(data_generazione_record, 'dd/MM/yyyy HH:mm:ss'), 'yyyy-MM-dd') AS dt_generazione_record"
      ],
      "dropDuplicates": [
        "ts_operazione",
        "ndg_cliente"
      ]
    },
    "load": {
      "partitionInfo": {
        "type": "FILE_NAME_REGEX",
        "columnName": "${spark.partitionColumn.daily}",
        "configuration": {
          "regexGroup": 1,
          "inputPattern": "yyyyMMdd",
          "outputPattern": "yyyy-MM-dd"
        }
      },
      "target": {
        "trusted": "${impala.db.name}.t_ocs_daily_trd",
        "error": "${impala.db.name}.t_ocs_daily_err"
      }
    }
  }
}